name: Build AppImage

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-appimage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build patchelf file wget
          # Qt6 toolchain and modules used by CMakeLists.txt
          sudo apt-get install -y qt6-base-dev qt6-base-dev-tools qt6-tools-dev qt6-tools-dev-tools qt6-pdf-dev qt6-webengine-dev
          # ImageMagick for icon generation and appstream for validation
          sudo apt-get install -y imagemagick appstream

      - name: Configure (Release)
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build build -j

      - name: Build dist (AppImage via CMake target)
        run: |
          cmake --build build --target dist -j

      - name: Locate artifact
        id: find_appimage
        run: |
          echo "Listing dist directory:"
          ls -lah dist || true
          APPIMAGE_PATH=$(ls dist/*.AppImage | head -n1 || true)
          if [ -z "${APPIMAGE_PATH}" ]; then
            echo "::error::No AppImage found under dist/."
            exit 1
          fi
          echo "Found AppImage: ${APPIMAGE_PATH}"
          echo "appimage=${APPIMAGE_PATH}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: genai_reader-${{ github.ref_name }}-AppImage
          path: ${{ steps.find_appimage.outputs.appimage }}

      - name: Upload to GitHub Release (if tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.find_appimage.outputs.appimage }}
            APPIMAGE.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
